// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Gtker.WowMessages.Generator.Generated
{
    [JsonConverter(typeof(DefinerTypeJsonConverter))]
    public enum DefinerType
    {
        Enum_,

        Flag,
    }
    public class DefinerTypeJsonConverter : JsonConverter<DefinerType>
    {
        public override DefinerType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "Enum":
                    return DefinerType.Enum_;
                case "Flag":
                    return DefinerType.Flag;
                default:
                    throw new ArgumentException(String.Format("Bad DefinerType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, DefinerType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case DefinerType.Enum_:
                    JsonSerializer.Serialize<string>(writer, "Enum", options);
                    return;
                case DefinerType.Flag:
                    JsonSerializer.Serialize<string>(writer, "Flag", options);
                    return;
            }
        }
    }
}
