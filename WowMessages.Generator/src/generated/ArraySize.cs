// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace WowMessages.Generator.Generated
{
    [JsonConverter(typeof(ArraySizeJsonConverter))]
    public abstract class ArraySize
    {
    }

    public class ArraySizeJsonConverter : JsonConverter<ArraySize>
    {
        public override ArraySize Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var readerCopy = reader;
            var tagValue = JsonDocument.ParseValue(ref reader).RootElement.GetProperty("array_size_tag").GetString();

            switch (tagValue)
            {
                case "Endless":
                    return JsonSerializer.Deserialize<ArraySizeEndless>(ref readerCopy, options);
                case "Fixed":
                    return JsonSerializer.Deserialize<ArraySizeFixed>(ref readerCopy, options);
                case "Variable":
                    return JsonSerializer.Deserialize<ArraySizeVariable>(ref readerCopy, options);
                default:
                    throw new ArgumentException(String.Format("Bad ArraySizeTag value: {0}", tagValue));
            }
        }

        public override void Write(Utf8JsonWriter writer, ArraySize value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize(writer, value, value.GetType(), options);
        }
    }
}
